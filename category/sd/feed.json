{
    "version": "https://jsonfeed.org/version/1",
    "title": "Chih Chia's Blog • All posts by \"sd\" category",
    "description": "",
    "home_page_url": "https://to-pro.github.io",
    "items": [
        {
            "id": "https://to-pro.github.io/Arduino/SD_write_bin/",
            "url": "https://to-pro.github.io/Arduino/SD_write_bin/",
            "title": "SD卡寫入數據",
            "date_published": "2023-04-25T05:58:06.895Z",
            "content_html": "<h2 id=\"通訊方式\"><a class=\"anchor\" href=\"#通訊方式\">#</a> 通訊方式</h2>\n<p>SD 卡可以透過 SPI 或 MMC 介面與系統進行通訊，兩者有以下的差異與優缺點：</p>\n<ul>\n<li>\n<p>SPI 介面：需要少量的引腳，且相對較容易設定，是常見的 SD 卡介面之一。SPI 介面的速度較慢，通常最高只能達到 25MHz，但是在低速應用中表現良好。由於 SPI 介面採用全雙工傳輸方式，因此可以在傳輸過程中同時進行讀取和寫入操作。</p>\n</li>\n<li>\n<p>MMC 介面：需要較多的引腳，且相對較難設定，但是其傳輸速度較快，通常最高可達到 52MHz。MMC 介面是採用半雙工傳輸方式，因此在傳輸過程中只能進行讀取或寫入操作。</p>\n</li>\n</ul>\n<p>綜合來說，如果應用中需要高速讀寫資料，且有足夠的引腳可供使用，MMC 介面可能是更好的選擇；如果應用中需要少量的引腳，且速度要求不高，則可以考慮使用 SPI 介面。</p>\n<h2 id=\"基本讀寫\"><a class=\"anchor\" href=\"#基本讀寫\">#</a> 基本讀寫</h2>\n<p>主要函數會用到如下所示:</p>\n<p>如果是使用 SPI 通訊 (可以參考<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXJkdWluby5jYy9yZWZlcmVuY2UvZW4vbGlicmFyaWVzL3NkLw==\">官網</span>說明)</p>\n<pre><code class=\"language-c++\">#include &lt;SPI.h&gt;\n#include &lt;SD.h&gt;\nSD.begin(SD_CS_PIN);//SPI的 CS 腳位\nFile file = SD.open(&quot;data.txt&quot;, FILE_WRITE);// 在 SD 卡根目錄下建立一個data.txt檔案\n</code></pre>\n<p>如果在 ESP32 使用 MMC 通訊，則 SD 要改 SD_MMC (同樣可以參考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmVzcHJlc3NpZi5jb20vcHJvamVjdHMvZXNwLWlkZi9lbi9sYXRlc3QvZXNwMzIvYXBpLXJlZmVyZW5jZS9wZXJpcGhlcmFscy9zZG1tY19ob3N0Lmh0bWw=\">官網</span>說明)</p>\n<pre><code class=\"language-c++\">#include &lt;FS.h&gt;\n#include &lt;SD_MMC.h&gt;\nSD_MMC.begin();//MMC腳位固定\nFile file = SD_MMC.open(&quot;/data.txt&quot;, FILE_WRITE);// 在 SD 卡根目錄下建立一個data.txt檔案，注意ESP32目錄要加/\n</code></pre>\n<p>檔案寫入則都是相同的</p>\n<pre><code class=\"language-c++\">file.println(&quot;Hello, SD Card!&quot;);// 寫入資料到檔案中\nfile.close();// 關閉檔案\n</code></pre>\n<h2 id=\"自定義寫入\"><a class=\"anchor\" href=\"#自定義寫入\">#</a> 自定義寫入</h2>\n<p>因為要擷取實驗資料我假設每次取樣有 m 個數字要記錄，直接用 println 寫入 txt 檔會有要記錄到小數點後幾位的問題，並且每次需要寫入的位元組（byte）會不一樣。因此直接將資料在記憶體中的值記錄下來就不會有上述的問題。</p>\n<p>例如每個 double 就是 8 個 byte。那麼理論上每次只要寫入 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>8</mn><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">8m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">8</span><span class=\"mord mathnormal\">m</span></span></span></span> byte 即可。又因為怕中間一個傳輸失誤，頭尾各加 2 個 byte 為確認 (保險) 用位元組。因此每次都寫入 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>8</mn><mi>m</mi><mo>+</mo><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">8m+4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">8</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span></span></span></span> byte。</p>\n<p>範例函數如下:<br />\n 創建的檔案的副檔名為.bin</p>\n<pre><code class=\"language-c++\">// 初始化 SD 卡\nif (!SD_MMC.begin()) &#123;\n    Serial.println(&quot;SD 卡初始化失敗&quot;);\n    return;\n&#125;\nString filename_set = &quot;data&quot;;\n// 取得下一個檔案編號\nint fileNumber = getNextFileNumber(filename_set);\n\n// 新檔案名稱\nString filename = &quot;/data&quot; + String(fileNumber, DEC) + &quot;.bin&quot;;\n\n// 開啟新檔案\nFile file = SD_MMC.open(filename, FILE_WRITE);\nif (!file) &#123;\n    Serial.println(&quot;開啟檔案失敗&quot;);\n    return;\n&#125;\n</code></pre>\n<p>寫入函數時使用</p>\n<pre><code class=\"language-c++\">const char CONFIRM_BYTE1 = 0xAA;\nconst char CONFIRM_BYTE2 = 0x55;\ntemplate&lt;typename T&gt;\nbool write_data_to_file(T* data,int data_length, File&amp; filename)\n&#123;\n  // 確認輸入的檔案物件是否有效\n  if (!filename)\n  &#123;\n      return false;\n  &#125;\n  filename.write((byte*) &amp;CONFIRM_BYTE1, sizeof(CONFIRM_BYTE1));\n  filename.write((byte*) &amp;CONFIRM_BYTE1, sizeof(CONFIRM_BYTE1));\n  for (int j = 0; j &lt; data_length; j++)\n  &#123;\n    filename.write((byte*) &amp;data[j], sizeof(data[0]));\n  &#125;\n  filename.write((byte*) &amp;CONFIRM_BYTE2, sizeof(CONFIRM_BYTE2));\n  filename.write((byte*) &amp;CONFIRM_BYTE2, sizeof(CONFIRM_BYTE2));\n  filename.flush();\n  return true;\n&#125;\n</code></pre>\n<p>另外如果想檢查是否已存在檔案則可以參考下面所示</p>\n<pre><code class=\"language-c++\">int getNextFileNumber(String fileName ) &#123;\n  int fileNumber = 1; // 起始檔案編號\n  while (SD_MMC.exists(&quot;/&quot; + fileName + String(fileNumber, DEC) + &quot;.bin&quot;)) &#123;\n    fileNumber++; // 檢查下一個檔案編號\n  &#125;\n//   SD_MMC.mkdir(&quot;/data&quot; + String(fileNumber, DEC) + &quot;.bin&quot;);\n  return fileNumber;\n&#125;\n</code></pre>\n<h2 id=\"matlab讀取方式\"><a class=\"anchor\" href=\"#matlab讀取方式\">#</a> MATLAB 讀取方式</h2>\n<p>因為紀錄的.bin 檔還需要解碼，這裡提供 MATLAB 程式讀取並繪圖</p>\n<pre><code class=\"language-MATLAB\">clc;clear;close all;\naddpath 'Z:\\My Drive\\MATLAB\\plot_function'\n\nfid = fopen('data1.bin', 'r');\n\n%定義開頭與結尾的 byte\nstart_byte = 0xAA;\nend_byte = 0x55;\n\n%定義每筆資料長度與資料的型態(float or double)\ndata_length = 22;\ndata_front = 'double';\n\n% 讀取數據\ndata = [];\nwhile ~feof(fid)\n    % 確認開頭的 byte\n    byte1_1 = fread(fid, 1, 'uint8');\n    if feof(fid)\n        disp('读取完毕');\n        break\n    end\n    byte1_2 = fread(fid, 1, 'uint8');\n    while ((byte1_1 ~= start_byte) &amp;&amp;(byte1_2 ~= start_byte) &amp;&amp; (~feof(fid)))\n        byte1 = fread(fid, 1, 'uint8');\n    end\n    if ~feof(fid)\n        % 讀取data_length個double\n        tmp = fread(fid, data_length, data_front);\n        % 確認結尾 byte\n        byte2_1 = fread(fid, 1, 'uint8');\n        byte2_2 = fread(fid, 1, 'uint8');\n        if ((byte2_1 == end_byte)&amp;&amp;(byte2_2 == end_byte))\n            % 加入資料中\n            data = [data; tmp'];\n        end\n    end\nend\n% 關閉文件\nfclose(fid);\n\nduration = data(2:end,1);\nt = data(:,2);\nx = data(:,3:end);\nfig(1)=figure(&quot;Name&quot;,&quot;diff_t&quot;);\nplot(diff(t),'-b');\nylabel(&quot;Diff t&quot;)\nxlim tight\nylim padded\nplot_set(14,2);\n\nfig(2)=figure(&quot;Name&quot;,&quot;duration&quot;);\nplot(duration,'-b');\nylabel(&quot;duration(ms)&quot;)\nxlim tight\nylim padded\nplot_set(14,2);\n\nfig(3)=figure(&quot;Name&quot;,&quot;duration_Hz&quot;);\nplot(ones(size(duration))./duration*1000,'-b');\nylabel(&quot;duration(Hz)&quot;)\nxlim tight\nylim padded\nplot_set(14,2);\nmin(ones(size(duration))./duration*1000)\n\nfig(4)=figure(&quot;Name&quot;,&quot;data_x&quot;);\nplot(t,x(:,1),'-b');\nylabel(&quot;sin(t)&quot;)\nxlim tight\nylim padded\nplot_set(14,2);\n</code></pre>\n<h2 id=\"函示庫懶人包\"><a class=\"anchor\" href=\"#函示庫懶人包\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1RvLXByby9NeV9TRA==\">函示庫懶人包</span></h2>\n<p>這裡將程式碼包成函示庫方便以後調用:</p>\n<ul>\n<li>\n<p>注意事項</p>\n<ol>\n<li>\n<p>預設是 MMC 通訊方式，若是用 SPI 則需在引入函數庫前定義 SD_SPI</p>\n</li>\n<li>\n<p>SD_save 為結構變數，請在使用任何本函數庫中的函數前設定好</p>\n</li>\n<li>\n<p>My_SD_init (“data”); 引數為創建的檔案名稱，若與已存在重名則在最後面加上數字</p>\n</li>\n<li>\n<p>My_SD_init_info_save (); 可加可不加，需再 My_SD_init 後。會再創一個同名的 txt 檔紀錄寫入的 SD 卡的相關資訊 (確認 byte、資料長度和資料形式)</p>\n</li>\n</ol>\n</li>\n<li>\n<p>主程式範例:<br />\n 資料為 sin (t)，t 為時間 (0~t_end，間隔 dt)</p>\n</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Arduino.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// #define SD_SPI</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;My_SD.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">double</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">double</span> x <span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> data_length <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">double</span> dt <span class=\"token operator\">=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">double</span> t_end <span class=\"token operator\">=</span> <span class=\"token number\">10.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">double</span> rumTime<span class=\"token operator\">=</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> start_time<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> end_time<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span>t_end<span class=\"token operator\">/</span>dt<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\">// float data[data_length+2] = &#123;0.0&#125;;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\">// SD_save.data_type = 0;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">double</span> data<span class=\"token punctuation\">[</span>data_length<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  SD_save<span class=\"token punctuation\">.</span>data_type <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  SD_save<span class=\"token punctuation\">.</span>data_length <span class=\"token operator\">=</span> data_length<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token function\">My_SD_init</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token function\">My_SD_init_info_save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token comment\">// 寫入資料到檔案</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    t <span class=\"token operator\">+=</span> dt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    x <span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rumTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> data_length<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      data<span class=\"token punctuation\">[</span>k<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    start_time<span class=\"token operator\">=</span><span class=\"token function\">micros</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//us</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token function\">write_data_to_file</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\">// SD_write_count++;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\">// if(SD_write_count>=9)&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\">//   SD_write_count=0;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token comment\">//   file.flush();</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token comment\">// &#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    end_time<span class=\"token operator\">=</span><span class=\"token function\">micros</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">==</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 模擬錯誤的寫入</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>          <span class=\"token keyword\">double</span> test <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>          SD_save<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>byte<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>test<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        SD_save<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token comment\">// rumTime = static_cast&lt;double>(end_time-start_time)/1000.0;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    rumTime <span class=\"token operator\">=</span> static_cast<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>end_time<span class=\"token operator\">-</span>start_time<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">1000.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token comment\">// 關閉檔案</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  SD_save<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"測試結束\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>MATLAB (要有用 My_SD_init_info_save () 紀錄寫入的 SD 卡的相關資訊的 txt 才可以使用)</li>\n</ul>\n<pre><code class=\"language-MATLAB\">clc;clear;close all;\naddpath 'Z:\\My Drive\\MATLAB\\plot_function'\n\n% 文件名稱\nfilename = 'data3';\n\nfid = fopen(append(filename,'.bin'), 'r');\nfid_info = readcell(append(filename,'.txt'));\n\n%定義開頭與結尾的 byte\nstart_byte = fid_info&#123;1&#125;;\nend_byte =fid_info&#123;2&#125;;\n\n%定義每筆資料長度與資料的型態(float or double)\ndata_length = fid_info&#123;3&#125;;\ndata_front = fid_info&#123;4&#125;;\n\n% 讀取數據\ndata = [];\nwhile ~feof(fid)\n    % 確認開頭的 byte\n    byte1_1 = fread(fid, 1, 'uint8');\n    if feof(fid)\n        disp('读取完毕');\n        break\n    end\n    byte1_2 = fread(fid, 1, 'uint8');\n    while ((byte1_1 ~= start_byte) &amp;&amp;(byte1_2 ~= start_byte) &amp;&amp; (~feof(fid)))\n        byte1 = fread(fid, 1, 'uint8');\n    end\n    if ~feof(fid)\n        % 讀取data_length個double\n        tmp = fread(fid, data_length, data_front);\n        % 確認結尾 byte\n        byte2_1 = fread(fid, 1, 'uint8');\n        byte2_2 = fread(fid, 1, 'uint8');\n        if ((byte2_1 == end_byte)&amp;&amp;(byte2_2 == end_byte))\n            % 加入資料中\n            data = [data; tmp'];\n        end\n    end\nend\n% 關閉文件\nfclose(fid);\n\nduration = data(2:end,1);\nt = data(:,2);\nx = data(:,3:end);\nfig(1)=figure(&quot;Name&quot;,&quot;diff_t&quot;);\nplot(diff(t),'-b');\nylabel(&quot;Diff t&quot;)\nxlim tight\nylim padded\nplot_set(14,2);\n\nfig(2)=figure(&quot;Name&quot;,&quot;duration&quot;);\nplot(duration,'-b');\nylabel(&quot;duration(ms)&quot;)\nxlim tight\nylim padded\nplot_set(14,2);\n\nfig(3)=figure(&quot;Name&quot;,&quot;duration_Hz&quot;);\nplot(ones(size(duration))./duration*1000,'-b');\nylabel(&quot;duration(Hz)&quot;)\nxlim tight\nylim padded\nplot_set(14,2);\nmin(ones(size(duration))./duration*1000)\n\nfig(4)=figure(&quot;Name&quot;,&quot;data_x&quot;);\nplot(t,x(:,1),'-b');\nylabel(&quot;sin(t)&quot;)\nxlim tight\nylim padded\nplot_set(14,2);\n\n</code></pre>\n<ul>\n<li>執行結果</li>\n</ul>\n<p>資料:</p>\n<p>&lt;img src=“<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWd1ci5jb20vQ0VScWJMQi5qcGc=\">https://imgur.com/CERqbLB.jpg</span>” width = 50% &gt;</p>\n<p>間隔時間:</p>\n<p>&lt;img src=“<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWd1ci5jb20veUw4VWd4US5qcGc=\">https://imgur.com/yL8UgxQ.jpg</span>” width = 50% &gt;</p>\n<p>可以看到間隔時間並不固定，因此擷取頻率會受到影響 (仍需解決)</p>\n",
            "tags": []
        }
    ]
}